{:rename-macros {}, :renames {}, :externs {window {innerWidth {}, innerHeight {}}}, :use-macros {with-iso quil-isometric.core, grid quil-isometric.core}, :excludes #{}, :name instrument-design.core, :imports nil, :requires {q quil.core, quil.core quil.core, quil-isometric.core quil-isometric.core, m quil.middleware, quil.middleware quil.middleware}, :uses {grid quil-isometric.core}, :defs {setup {:protocol-inline nil, :meta {:file "/Users/kieran/Code/clojure/instrument-design/src/instrument_design/core.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([]))}, :name instrument-design.core/setup, :variadic false, :file "src/instrument_design/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/Users/kieran/Code/clojure/instrument-design/src/instrument_design/core.cljs", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([state]))}, :name instrument-design.core/update-state, :variadic false, :file "src/instrument_design/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/kieran/Code/clojure/instrument-design/src/instrument_design/core.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([state]))}, :name instrument-design.core/draw-state, :variadic false, :file "src/instrument_design/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, instrument-design {:protocol-inline nil, :meta {:file "/Users/kieran/Code/clojure/instrument-design/src/instrument_design/core.cljs", :line 29, :column 14, :end-line 29, :end-column 31, :export true, :arglists (quote ([]))}, :name instrument-design.core/instrument-design, :variadic false, :file "src/instrument_design/core.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {quil-isometric.core quil-isometric.core, q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:fn :update :renderer :size :setup :middleware :host :host-id :no-start :draw :p3d}, :order [:host :update :renderer :p3d :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}